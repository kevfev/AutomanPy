syntax = "proto3";


/*****
This .proto file defines the base general classes used to implement the
rpc services and messages. The classes defined in this file are either 
used to compose composite classes, or are wrapped for convenience (e.g to use
pattern matching on the Scala side, tasks are wrapped)
*****/

/*
A dimension is a type of value to be estimated by a estimate (single Dimension)
or multi-estimate (multiple (repeated) Dimensions)
*/
message Dimension{
	string id = 1;
}


/*
A Task is a generalization of the different types of tasks that
AutoMan can perform, i.e. estimate, radio, etc. It contains all fields
used across tasks. For some types of tasks, some fields may not be applicable,
e.g. the options field for an estimation task. It is up to the API  to ensure 
tasks are generated correctly and validated. 

Fields to be added still:
minimum_spawn_policy (estimate)
estimator (estimate)
mock_answers
before_filter (freetext)
*/
message Task{
	string text = 1;
	string img_url = 2;
	string title = 3;
	string img_alt_txt = 4;
	string pattern = 5;
	double budget = 6;
	double confidence = 7;
	int32 sample_size=8;
	repeated string options = 9;
	repeated Dimension dimensions = 10;
	bool dont_reject = 11;
	bool pay_all_on_failure = 12;
	bool dry_run = 13;
	bool allow_empty_pattern = 14;

	string pattern_error_text = 16;
	int32 question_timeout_multiplier = 17;
	int32 initial_worker_timeout_in_s = 18;
	double wage = 19;
	double max_value = 20;
	double min_value = 21;
}


/*
This message class is part of the reply for an estimation task
fields:
high 				The highest valued response of a worker

low 				The lowest valued response of a worker

est 				The AutoMan estimate of all worker responses

cost 				The final cost of the task

conf 				The confidence of the answer
*/
message ValueOutcome{
	double est = 1;
	double low = 2;
	double high = 3;
	double cost = 4;
	double conf = 5;
}

/*
This message class is part of the reply for freetext,radio,
checkbook and their associated distribution tasks
fields:
option 				The result of the AutoMan task
*/
message StringOutcome{
	string option = 1;
}


/*
Enum definition describes the states an outcome can take.
UNKNOWN_OUTCOME 	good protobuf practice for adding new outcomes in the future,
					on older builds, newer values will be set to default value 0,
					hence "unknown outcome"

CONFIDENT   		outcome is a sound crowdsource estimate

LOW_CONFIDENCE  	outcome is a low confidence crowdsource estimate

OVERBUDGET  		the task went overbudget, no workers responded and AutoMan could not
					increase reward for task without going over budget
*/
enum OutcomeType{
	UNKNOWN_OUTCOME = 0;
	CONFIDENT = 1;
	LOW_CONFIDENCE = 2;
	OVERBUDGET = 3;
}



/*
ADAPTERS:
These classes Are used to communicate details about the adapter
for the back-end crowdsource to AutoMan
*/

/*
This message class defines the adapter used to connect to the
crowdsource backend.
fields:
adptr_type  		specifies the back-end the adapter connects to

access_id 	 		the login access id

access_key  		the secret login access key 

adapter_options 	any additional options specific for the adapter e.g
					sandbox_mode, etc.
*/
message AdapterCredentials{
	enum AdapterType{
		UNKNOWN_ADAPTER = 0;
		MTURK = 1;
	}
	AdapterType adptr_type = 1;
	string access_id  = 2;
	string access_key = 3;
	map<string, string> adapter_options = 4;
}